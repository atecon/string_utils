Help text for the string_utils.gfn package by Artur Tarassow.

Email: atecon@posteo.de (please ask questions and report bugs on the gretl mailing list if possible).

Source code and tests: https://github.com/atecon/string_utils

This package is a collection of helper functions for various operations of string variables and string arrays which are not covered by gretl's built-in methods (yet).


Public functions:
-----------------

strdrop():
Drop a specific string 'drop_str' from string array 'S'. String 'drop_str' may occur multiple times.
----------
Arguments:
S 		- string array
drop_str 	- string, pattern of string value to be droppped from S

Return:
Return string array excluding string 'drop_str' if present in S. If 'drop_str' is not present, the original array 'S' is returned instead. If string array 'S' has length zero, an empty array is returned.


strpos():
Determine the positions of a string in string array S.
NOTE: This function will be retired at the end of year 2020 since gretl versions >2020a will include the built-in function instrings() replacing strpos().
----------
Arguments:
S 				- string array
search_pattern	- string, pattern of string entry to be searched in S

Return:
Returns the positional entr(y)ies of string 'search_pattern' in a column vector if present in string array 'S', otherwise a 1x1 zero-matrix. If string array 'S' is of length zero, an empty matrix is returned (can be checked by <nelem(matrix)>).


struniq():
Get the unique string values of string array S.
----------
Arguments:
S 		- string array

Return:
Array containing the distinct elements of array S not sorted but in their order of appearance. If string array 'S' has length zero or at least one string element is of length zero, an empty string array is returned.


strrepl():
Copy string n-times into a string array of length n.
----------
Arguments:
str		- string
n 	 	- int

Return:
Array containing string 'str' n-times. Also works for an empty string 'str'.


strsandwich():
Construct a string array. To each numerical value of x a string prefix 'pre' and a suffix 'post' is concatenated.
----------
Arguments:
x 		- matrix 
pre 	- string, optional
post 	- string, optional

Return:
Array of length n=rows(vec(x)). Each string is a combination of the prefix 'pre', the i-th numerical value of x and the suffix 'post'.


msortby_rowlabels():
Sort rows of matrix X by re-ordering row-labels of X by string array 'rowlabels_new'.
----------
Arguments:
X				- matrix, must include row-labels set by rnameset()
rowlabels_new	- string array, re-order X' row-labels by this string

Return:
Matrix with sorted rows of X by 'rowlabels_new'. X must have row-labels. Also all elements in 'rowlabels_new' must be present in X' row-labels too, otherwise an empty matrix is returned (can be checked by <nelem(matrix)>).



Changelog:
- 0.21, Januar 2020:
	+ strpos() function also accepts and searches for empty string
	(length zero) in array S.
	+ drop unnecessary checks in strpos()
	+ add new function strsandwich()
- 0.2, December 2019:
    + add new function strprog()
- 0.1, December 2019:
    + initial release
