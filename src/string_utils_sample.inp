clear
set verbose off

include string_utils.gfn


strings S = defarray("A", "B")
string drop = "B"
eval strdrop(S, drop)

strings S = defarray("A", "B", "C", "B")
string search = "B"
eval strpos(S, search)

# Unique values without sorting
strings S = defarray("C", "B", "A", "B")
eval struniq(S)
# Unique values with sorting
strings S = defarray("C", "B", "A", "B")
eval struniq(S, TRUE)


string str = "AB"
eval strrepl(str, 3)

matrix m = mshape(seq(1,4),2,2)
rnameset(m, "R1 R2")
strings rnames_new = defarray("R2", "R1")
eval msortby_rowlabels(m, rnames_new)

eval strsandwich(seq(2,4), "beta_")
eval strsandwich(seq(1,2), "a[" , "]")


string target = "ABCdev"
string prefix1 = "ABC"
string prefix2 = "CBA"
eval strstarts(target, prefix1)
eval strstarts(target, prefix2)

string target = "ABCdev"
string suffix1 = "dev"
string suffix2 = "Cved"
eval strends(target, suffix1)
eval strends(target, suffix2)


# Capitalize first letter
string input = "abc def"
eval capitalize(input)

# "Titlelize" string
string input = "abc def"
eval titlecase(input)

# Camelcase string
string input = "abc def"
eval camelcase(input)

# Snakecase string
string input = "gretl Loves SNAKE caSe"
eval snakecase(input)


# Find position of a substring within a string
string search = "abc def"
string find = "e"
eval strfind(search, find)
