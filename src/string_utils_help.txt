This package is a collection of helper functions for various operations of
string variables and string arrays which are not covered by gretl's built-in
methods (yet).

Please ask questions and report bugs on the gretl mailing list if possible.
Alternatively, create an issue ticket on the github repo (see below).
Source code and test script(s) can be found here:
https://github.com/atecon/string_utils



Public functions:
-----------------

strflatten():
Flatten an array of strings to a string separated by some delimiter.
----------
Arguments:
S           - string array, Input string array
delimiter   - string, Delimiter (optional, default: ",")

Return:
String value separating each array item by some delimiter.
NOTE: For simply flattening a string array, use the built-in gretl
function flatten which holds the strings in S, arranged one per line
by default.


strdrop():
Drop a specific string 'drop_str' from string array 'S'. String 'drop_str'
may occur multiple times.
----------
Arguments:
S           - string array, Input
drop_str    - string, Pattern of string value to be dropped from S

Return:
Return string array excluding string 'drop_str' if present in S. If 'drop_str'
is not present, the original array 'S' is returned instead. If string
array 'S' has length zero, an empty array is returned.


struniq():
Get the unique string values of string array S.
----------
Arguments:
S           - string array

Return:
Array containing the distinct elements of array S not sorted but in their
order of appearance. If string array 'S' has length zero or at least one
string element is of length zero, an empty string array is returned.


strrepl():
Copy string n-times into a string array of length n.
----------
Arguments:
str         - string
n           - int

Return:
Array containing string 'str' n-times. Also works for an empty string 'str'.


strsandwich():
Construct a string array. To each numerical value of x concatenate a
string prefix 'pre' and a suffix 'post'.
----------
Arguments:
x           - matrix
pre         - string, optional
post        - string, optional

Return:
Array of length n=rows(vec(x)). Each string is a combination of the
prefix 'pre', the i-th numerical value of x and the suffix 'post'.


msortby_rowlabels():
Sort rows of matrix X by re-ordering row-labels of X by string array
'rowlabels_new'.
----------
Arguments:
X               - matrix, must include row-labels set by rnameset()
rowlabels_new   - string array, re-order X' row-labels by this string

Return:
Matrix with sorted rows of X by 'rowlabels_new'. X must have row-labels.
Also all elements in 'rowlabels_new' must be present in X' row-labels too,
otherwise an empty matrix is returned (can be checked by <nelem(matrix)>).


strstarts():
Check whether 'target' starts with 'prefix'.
----------
Arguments:
target      - string
prefix      - int

Return:
TRUE if 'target' starts with 'prefix', otherwise FALSE.

strends():
Check whether 'target' ends with 'suffix'.
----------
Arguments:
target      - string
suffix      - int

Return:
TRUE if 'target' ends with 'suffix', otherwise FALSE.



Changelog:
- 0.4, January 2021:
    + Add new functions strstarts() and strends()
- 0.3, December 2020:
    + Add new strflatten() function
    + Remove deprecated function strpos() as reported in version 0.21 - this
      function is superseded by gretl's built-in function instrings()
      which is available since gretl 2020a
    + Change minimum version required from 2018a to 2019c.
- 0.21, Januar 2020:
    + strpos() function also accepts and searches for empty string
      (length zero) in array S.
    + drop unnecessary checks in strpos()
    + add new function strsandwich()
- 0.2, December 2019:
    + add new function strprog()
- 0.1, December 2019:
    + initial release
